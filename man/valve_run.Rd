% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/valve_run.R
\name{valve_run}
\alias{valve_run}
\title{Start a valve App}
\usage{
valve_run(
  filepath = "plumber.R",
  host = "127.0.0.1",
  port = 3000,
  n_max = 3,
  workers = 3,
  check_unused = 10,
  max_age = 300
)
}
\arguments{
\item{filepath}{default \code{"plumber.R"}. The path to the Plumber API. Provided to
the \code{file} argument of \code{plumber::plumb()}.}

\item{host}{default \code{"127.0.0.1"}. Where to host the valve app and Plumber APIs.}

\item{port}{default \code{3000}. The port to host the valve app on.}

\item{n_max}{default \code{3}. The maximum number of Plumber APIs to run in parallel.}

\item{workers}{default \code{3}. The number of worker threads in the valve app to
execute requests. This number should not be larger than \code{n_threads + 1}.}

\item{check_unused}{default \code{10}. The time interval, in seconds, to check for
unused connections.}

\item{max_age}{default \code{300} (five minutes). Specifies how long a connection
can go unused without being terminated. If a connection reaches this age
it will be terminated in the next pool check
(interval determined by \code{check_unused}),}
}
\description{
Run a plumber API in parallel using valve. Plumber APIs are spawned on
\code{n_threads} asynchronous threads on random ports. Incoming requests are handled
on a single port and redirected to the plumber APIs in a
simple round-robin fashion.
}
\examples{
if (interactive()) {
  plumber_api_path <- system.file("plumber.R", package = "valve")
  valve_run(plumber_api_path)
}

}
